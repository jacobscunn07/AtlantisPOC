apiVersion: apps/v1
kind: Deployment
metadata:
  name: atlantis
  labels:
    app: atlantis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: atlantis
  template:
    metadata:
      labels:
        app: atlantis
    spec:
      containers:
      - name: atlantis
        # image: runatlantis/atlantis:v0.11.1 # 1. Replace <VERSION> with the most recent release.
        image: jacobscunn07/atlantis:v0.0.2
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: aws-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: aws-secret-key
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: aws-region
        - name: ATLANTIS_REPO_WHITELIST
          value: github.com/jacobscunn07/AtlantisPOC # 2. Replace this with your own repo whitelist.

        ### GitHub Config ###
        - name: ATLANTIS_GH_USER
          value: jacobscunn07 # 3i. If you're using GitHub replace <YOUR_GITHUB_USER> with the username of your Atlantis GitHub user without the `@`.
        - name: ATLANTIS_GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: token
        - name: ATLANTIS_GH_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: webhook-secret
        - name: ATLANTIS_ATLANTIS_URL
          value: "https://62dc3799.ngrok.io"
        - name: ATLANTIS_ALLOW_FORK_PRS
          value: "true"
        - name: ATLANTIS_CHECKOUT_STRATEGY
          value: "merge"
        ### End GitHub Config ###

        - name: ATLANTIS_PORT
          value: "4141" # Kubernetes sets an ATLANTIS_PORT variable so we need to override.
        ports:
        - name: atlantis
          containerPort: 4141
        args:
        - server
        - --repo-config=/atlantis/repos.yml
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 100m
        livenessProbe:
          # We only need to check every 60s since Atlantis is not a
          # high-throughput service.
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            # If using https, change this to HTTPS
            scheme: HTTP
        readinessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            # If using https, change this to HTTPS
            scheme: HTTP
        volumeMounts:
        - name: atlantis-config
          mountPath: /atlantis
          readOnly: true
      volumes:
      - name: atlantis-config
        configMap:
          name: atlantis-config
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: atlantis
# spec:
#   type: ClusterIP
#   ports:
#   - name: atlantis
#     port: 80
#     targetPort: 4141
#   selector:
#     app: atlantis
apiVersion: v1
kind: Service
metadata:
  name: atlantis
spec:
  type: NodePort
  ports:
  - name: atlantis
    nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 4141
  selector:
    app: atlantis